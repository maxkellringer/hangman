{"version":3,"sources":["components/Header.js","components/WrongLetters.js","components/Figure.js","components/Word.js","components/Notification.js","helpers/helpers.js","components/Popup.js","App.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","WrongLetters","_ref","wrongLetters","className","length","map","letter","i","key","reduce","prev","curr","Figure","errors","height","width","x1","y1","x2","y2","cx","cy","r","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","concat","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","words","Math","floor","random","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setCorrectLetters","_useState5","_useState6","setWrongLetters","_useState7","_useState8","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","currentLetters","toConsumableArray","window","addEventListener","removeEventListener","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.221f5b69.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Header() {\n  return (\n    <>\n        <h1>HangMan</h1>\n        <p>Find the hidden word - Enter a letter</p>\n    </>\n  )\n}\n","import React from \"react\";\n\nexport default function WrongLetters({ wrongLetters }) {\n  return (\n    <div className=\"wrong-letters-container\">\n      <div>\n        {wrongLetters.length > 0 && <p>Wrong</p>}\n        {wrongLetters\n          .map((letter, i) => <span key={i}>{letter}</span>)\n          .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport WrongLetters from \"./WrongLetters\";\n\nexport default function Figure({wrongLetters}) {\n  const errors = wrongLetters.length;\n\n  return (\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\n            {/* <!-- Rod --> */}\n            <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n            <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n            <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n            <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n            <line x1=\"60\" y1=\"60\" x2=\"100\" y2=\"20\" />\n\n            {/* <!-- Head --> */}\n            {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\"/>}\n            {/* <!-- Body --> */}\n            {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\"/>}\n            {/* <!-- Arms --> */}\n            {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\"/>}\n            {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\"/>}\n            {/* <!-- Legs --> */}\n            {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\"/>}\n            {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\"/>}\n        </svg>\n  );\n}\n","import React from \"react\";\n\nexport default function Word({ selectedWord, correctLetters }) {\n  return (\n    <div className=\"word\">\n      {selectedWord\n        .split(\"\")\n        .map(\n          (letter, i) => {\n            return (\n              <span className=\"letter\" key={i}>\n                {correctLetters.includes(letter) ? letter : ''}\n              </span>\n            )}\n        )\n      }\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Notification({ showNotification }) {\n  return (\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\n      <p>You have already entered this letter</p>\n    </div>\n  );\n}\n","export function showNotification(setter) {\n    setter(true);\n    setTimeout(() => {\n        setter(false);\n    }, 2000);\n}\n\nexport function checkWin(correct, wrong, word) {\n    let status = 'win';\n\n    // check for win\n    word.split('').forEach(letter => {\n        if (!correct.includes(letter)) {\n            status = '';\n        }\n    });\n\n    // check for loss\n    if (wrong.length === 6) status = 'lose';\n\n    return status\n}","import React, { useEffect } from \"react\";\nimport { checkWin } from \"../helpers/helpers\";\n\nexport default function Popup({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain}) {\n  let finalMessage = '';\n  let finalMessageRevealWord = '';\n  let playable = true;\n\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\n    finalMessage = 'Congratulations! You won!';\n    playable = false;\n    \n  } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\n    finalMessage = 'You Lost!'\n    finalMessageRevealWord = `the word was: ${selectedWord}`;\n    playable = false;\n  }\n\n  useEffect(() => setPlayable(playable));\n\n  return (\n    <div className=\"popup-container\" style={finalMessage !== '' ? {display: 'flex'} : {}}>\n      <div className=\"popup\">\n        <h2>{finalMessage}</h2>\n        <h3>{finalMessageRevealWord}</h3>\n        <button onClick={playAgain}>Play Again</button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Notification from './components/Notification';\nimport Popup from './components/Popup';\nimport {showNotification as show} from './helpers/helpers';\n\nconst words = ['application', 'programming', 'interface', 'wizard', 'a'];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {key, keyCode} = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n  \n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...wrongLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    }\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters}/>\n        <WrongLetters wrongLetters={wrongLetters}/>\n        <Word selectedWord={selectedWord} correctLetters={correctLetters}/>\n      </div>\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\n      <Notification showNotification={showNotification}/>\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}